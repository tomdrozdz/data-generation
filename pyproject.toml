[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "udg"
description = 'Urban Data Generation'
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [
  { name = "Tomasz Dróżdż", email = "t.p.drozdz@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "attrs",
  "base58",
  "cattrs",
  "numpy",
  "polars",
]
dynamic = ["version"]

[project.optional-dependencies]
visualization = [
  "rich",
]

[project.urls]
Documentation = "https://github.com/unknown/udg#readme"
Issues = "https://github.com/unknown/udg/issues"
Source = "https://github.com/unknown/udg"

[tool.hatch.version]
path = "src/udg/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "black",
  "mypy",
  "pytest",
  "pytest-cov",
  "ruff",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests/}"
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/udg {args:tests/}"
mypy = "python -m mypy src tests"
lint = "python -m ruff --extend-select I --extend-select E501 src tests"

[tool.hatch.envs.example]
dependencies = [
  "rich",
]

[tool.hatch.envs.example.scripts]
data-generation = "python examples/data_generation.py"
feature-tree = "python examples/feature_tree.py"
serialization = "python examples/serialization.py"
validation = "python examples/validation.py"
real = "python examples/real.py"
a = "python examples/a.py"

[[tool.hatch.envs.test.matrix]]
python = ["311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "src/udg/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "class .*\\(.*\\bProtocol.*\\):",
  "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
namespace_packages = true
explicit_package_bases = true
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"

ignore_missing_imports = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py311"
src = ["src", "tests"]
line-length = 88

show-fixes = true
show-source = true
ignore-init-module-imports = true
respect-gitignore = true

select = [
    "E",
    "F",
    "N",
    "D",
    "UP",
    "YTT",
    "ANN",
    "B",
    "DTZ",
    "EXE",
    "ISC",
    "ICN",
    "G",
    "INP",
    "PIE",
    "RSE",
    "SIM",
    "PTH",
    "PD",
    "PGH",
    "PLC",
    "PLE",
    "PLR0133",
    "PLR0206",
    "PLR1701",
    "NPY",
    "RUF",
]

ignore = [
    "B905",
    "E501",
    "E741",
    "N818",
    "D1",
    "D203",
    "D213",
    "ANN002",
    "ANN003",
    "ANN10",
    "ANN401",
    "G00",
    "PD901",
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*_pb2*.py*",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["ANN"]
"examples/*" = ["INP"]

[tool.ruff.isort]
known-first-party = ["udg"]

[tool.ruff.flake8-annotations]
suppress-dummy-args = true
allow-star-arg-any = true

[tool.ruff.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.pydocstyle]
convention = "google"
